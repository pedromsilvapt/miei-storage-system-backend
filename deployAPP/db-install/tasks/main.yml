- name: Install PostgreSQL
  apt:
    name: ['postgresql-{{ pg_version }}', python-psycopg2, postgresql-contrib]
    state: latest

- name: Install Keepalived
  apt:
    name: ['keepalived']
    state: latest

- name: Install Bucardo
  become: yes
  block:
    - get_url:
        url: http://mirrors.kernel.org/ubuntu/pool/universe/b/bucardo/bucardo_5.5.0-1_all.deb
        dest: /home/bucardo.deb
    - apt:
        name: ['postgresql-plperl']
        state: latest
    - apt:
        deb: /home/bucardo.deb
    - shell: |
        apt -y -f install

- name: Setup Keepalived
  block:
    - template:
        src: interfaces.j2
        dest: /etc/network/interfaces
    - service:
        name: networking
        state: restarted
        enabled: yes
    - template:
        src: keepalived.conf.j2
        dest: /etc/keepalived/keepalived.conf
    - template:
        src: takeover.sh.j2
        dest: /etc/keepalived/takeover.sh
    - file:
        path: /etc/keepalived/takeover.sh
        mode: a+x
    - service:
        name: keepalived
        state: restarted
        enabled: yes


- name: Setup PostgreSQL
  become_user: postgres
  block:
    #gitlab user
    - postgresql_user:
        name: git
        password: "{{ pg_password }}"
    #gitab database
    - postgresql_db:
        name: gitlabhq_production
        owner: git
    #gitab user database
    - postgresql_db:
        name: gitlab
        owner: git
    #copy dump
    - copy:
        src: gitlab_db.sql
        dest: /tmp/gitlab_db.sql
    #restore gitlab database
    - postgresql_db:
        name: gitlabhq_production
        target: /tmp/gitlab_db.sql
        state: restore
    #bucardo user
    - postgresql_user:
        name: bucardo
        password: password
        role_attr_flags: SUPERUSER
    #bucardo database
    - postgresql_db:
        name: bucardo
        owner: bucardo
    #postgresql conf
    - replace:
        path: /etc/postgresql/{{ pg_version }}/main/postgresql.conf
        regexp: '^(#)?listen_addresses.*'
        replace: listen_addresses = '{{ listen }}'
    #postgresql hba
    - copy:
        src: pg_hba.conf
        dest: /etc/postgresql/{{ pg_version }}/main/pg_hba.conf

- name: Restart Postgresql
  service:
    name: postgresql
    state: restarted
    enabled: yes

- name: Bucardo install
  become: yes
  block:
    - file:
        path: /var/run/bucardo
        state: directory
    - shell: "bucardo install --batch"
  ignore_errors: yes

- name: Configure Bucardo
  become: yes
  shell: |
    bucardo add db db1 dbname=gitlabhq_production host={{ hostvars[groups["db-primary"][0]].ansible_default_ipv4.address }} user=bucardo pass=password
    bucardo add db db2 dbname=gitlabhq_production host={{ hostvars[groups["db-standby"][0]].ansible_default_ipv4.address }} user=bucardo pass=password
    bucardo add table % db=db1
    bucardo add table % db=db2
    bucardo add all tables --herd=db1_db2 db=db1
    bucardo add all tables --herd=db2_db1 db=db2
    bucardo add sync sync_db1ToDb2 relgroup=db1_db2 db=db1,db2
    bucardo add sync sync_db2ToDb1 relgroup=db2_db1 db=db2,db1
  tags: db-primary
  register: command_result
  failed_when: "'FAILED' in command_result.stderr"

- name: Start Bucardo
  become: yes
  shell: |
    bucardo start

- name: Start Bucardo at boot
  block:
    #copy script
    - copy:
        src: start_bucardo.sh
        dest: /home/start_bucardo.sh
    #chmod
    - file:
        path: /home/start_bucardo.sh
        mode: a+x
    #add cron job
    - shell: (crontab -l 2>/dev/null; echo "@reboot /home/start_bucardo.sh") | crontab -
